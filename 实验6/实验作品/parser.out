Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> splist
Rule 1     splist -> splist sp
Rule 2     splist -> sp
Rule 3     sp -> SYMBOL
Rule 4     sp -> SYMBOL NUMBER

Terminals, with rules where they appear

NUMBER               : 4
SYMBOL               : 3 4
error                : 

Nonterminals, with rules where they appear

sp                   : 1 2
splist               : 1 0

Parsing method: LALR

state 0

    (0) S' -> . splist
    (1) splist -> . splist sp
    (2) splist -> . sp
    (3) sp -> . SYMBOL
    (4) sp -> . SYMBOL NUMBER

    SYMBOL          shift and go to state 3

    splist                         shift and go to state 1
    sp                             shift and go to state 2

state 1

    (0) S' -> splist .
    (1) splist -> splist . sp
    (3) sp -> . SYMBOL
    (4) sp -> . SYMBOL NUMBER

    SYMBOL          shift and go to state 3

    sp                             shift and go to state 4

state 2

    (2) splist -> sp .

    SYMBOL          reduce using rule 2 (splist -> sp .)
    $end            reduce using rule 2 (splist -> sp .)


state 3

    (3) sp -> SYMBOL .
    (4) sp -> SYMBOL . NUMBER

    SYMBOL          reduce using rule 3 (sp -> SYMBOL .)
    $end            reduce using rule 3 (sp -> SYMBOL .)
    NUMBER          shift and go to state 5


state 4

    (1) splist -> splist sp .

    SYMBOL          reduce using rule 1 (splist -> splist sp .)
    $end            reduce using rule 1 (splist -> splist sp .)


state 5

    (4) sp -> SYMBOL NUMBER .

    SYMBOL          reduce using rule 4 (sp -> SYMBOL NUMBER .)
    $end            reduce using rule 4 (sp -> SYMBOL NUMBER .)

